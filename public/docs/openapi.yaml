openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: login
      description: 'Authentication for a user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The Gaps username of the user.'
                  example: laboriosam
                password:
                  type: string
                  description: 'The Gaps password of the user.'
                  example: eligendi
                classroom_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rtxppgsenqbisprsabzvimkafhfdezifctmtnbbqfugtmbrworeemvuojivqwhjlpqvuogspvrvrmzjekocogiizmhfqkaychwoteasrcvjzcuktlsmfelhmlbgmcmitvzemzebfisfxbeebrutvtrnycgnsrdwhpskzudhdnlcxrttotidsewwnhx
              required:
                - username
                - password
  /api/register:
    post:
      summary: register
      description: 'Register a new user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The Gaps username of the user.'
                  example: placeat
                password:
                  type: string
                  description: 'The Gaps password of the user.'
                  example: delectus
                classroom_name:
                  type: string
                  description: 'The class of the user.'
                  example: autem
              required:
                - username
                - password
                - classroom_name
  /api/me:
    get:
      summary: me
      description: 'Get actual authenticate user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Authentication
  /api/logout:
    get:
      summary: logout
      description: 'Logout the actual authenticate user'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Authentication
  /api/update/gaps/absences:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Autres
  /api/classrooms:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Autres
  /api/classrooms/setUser:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Autres
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pvgommhsvniitewsltijlrmezsedgdbcwvdjnpjkzweggxlssllingflitijaxfripjzlqtcuifbnkuwxbclclagbysaeohmgnterrgexgdjddtrsgxufxwgikwijholeaezjqkqbeemecimzaqmqvkszhuzahrgvmadcvgeezhfnwhdadlllmbtghebxkcxppetlbjumjbjspuspdkwvlmwwuexucxpbuiqeayyxldpqdq
              required:
                - name
  /api/absences:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Autres
  /api/calendars:
    get:
      summary: getCalendars
      description: 'Retourne un json contenant une liste des calendrier. La liste correspond à l''ensemble des évènements de tous les calendriers que suit l''utilisateur.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: NAME
      tags:
        - Calendrier
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Calendrier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: unplgvnfnsjlltliyfarcnuotoxwalebylcgtncbqbhgillayxkvtebqfgcjlwmyxlbhkgxbpqlwahfxkrnwhuhetiibpubffzxmavsmxdqxyvvwrsjqaghgijjrvemlelvlavjrejxyqcbqjxlifgtbfzsvqqjrzhsaqadlqmlxcpzczvswviynueoahkdnmplkyfl
              required:
                - name
  '/api/calendars/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Calendrier
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Calendrier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kptkzeljkkzssdlejwnfnyuvuskwxtvrnukxyndegtvgnpjsxrhorckpjtbodgilxoelzfuejroeatdfldhalzithvmodejbcwaervaprimuzzxnabqeowkjdtybzrnuclndksoerftaxk
              required:
                - name
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Calendrier
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the calendar.'
        example: 1
        required: true
        schema:
          type: integer
  /api/calendars/share:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Calendrier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                calendar_id:
                  type: string
                  description: ''
                  example: dolor
                user_id:
                  type: string
                  description: ''
                  example: quae
                can_own:
                  type: boolean
                  description: ''
                  example: true
                can_view:
                  type: boolean
                  description: ''
                  example: false
              required:
                - calendar_id
                - user_id
                - can_own
                - can_view
  /api/events:
    get:
      summary: getEvents
      description: 'Retourne un json contenant une liste des évènements. La liste correspond à l''ensemble des évènements de tous les calendriers que suit l''utilisateur.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n \"id\" => 1,\n \"name\" => \"Calendrier 1\",\n \"events\" => [\n     \"id\" => 1,\n     \"title\" => \"Event 1\",\n     \"start\" => \"2020-01-01\",\n     \"end\" => \"2020-01-01\",\n     \"description\" => \"Description 1\",\n     \"location\" => \"Location 1\",\n     \"calendar_id\" => 1,\n     \"created_at\" => \"2020-01-01\",\n     \"updated_at\" => \"2020-01-01\",\n  ]\n]"
      tags:
        - Evènements
    post:
      summary: storeEvent
      description: "Enregistre un nouvel évènement dans la BDD\nSuccès: retourne un json contenant l'évènement créé\nFail: erreur"
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n\"success\" => true,\n\"message\" => \"event created:\",\n\"data\" => [\n    \"title\" => \"EventTitle\",\n     \"description\" => \"Une belle description\",\n     \"start\" => \"1901-01-01T00:00Z\",\n     \"end\" => \"1901-01-03T00:00Z\",\n     \"location\" => \"S149\",\n     \"calendar_id\" => 1,\n     \"updated_at\" => \"2022-05-25T13:09:40.000000Z\",\n     \"created_at\" => \"2022-05-25T13:09:40.000000Z\",\n     \"id\" => 142\n  ]\n]"
      tags:
        - Evènements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gkcmtyypllsygnwdbieajcirhosocsqkvgliojicremigunegmrmmkwetlsxkvfqsbvkopycgqbavvddpcrguyhvscwrnucnmztxwedvmocidqqtkcovlaosxfcufuctbhtarrjoizwnxpllzo
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: pccopjacnyjnqgajhvncsjpjbkkrharggapokbwemiinaoklxwrrvcowxyihqlqgfocnqutazogzabepwcvkhyuxumvlqjhkowuyjsjogaeodbnrjjqjhlkwqmjesukyfqzqqksgkyhxfvnehoeqbmtlkygddeahhkoqwpsrkvlpcbyifqzavkxocgezjiomfkngghnrzzeskgmyuluywiirxebccmhgomcbkdinatdjetsjwduwqzdkrnnxwmmisuyxanakzqxjfatboqjscghesjortrqenkzpwyihukvrxbprayasrpbqfbseyxkrwcsrpylhfcefrtfwwkeuhvckdtzaxlkrdkgacdlejfpbmdwipltkuktiloumdadxuprfahhmcuqcrcjhmmykglmmtbglkvorfzuebjgjujlpnccsqrslipuovneykruscexmwguztuhamukasjhhyxljpiwyyrnopqcllfsgosmahpzmzmquphlienbccvxizppxebqtwkyytaertzavqbycnobroekmukyuqgyzyolnsbsvnnybannarynwuktkajfnerehkjatvljwihevvqdrprwtkmqgunsxygbegnvvyyxyznrsrgkdfsmxlfcbfhhqhbltjvsuhwhnfgfwmggsgpmgfxnyrxqeplkoxzpmqenzagqpzuxlngrjgflxybamoheiepoplidnfabxsmxikbtrulplqsgekhcxxcmlwvwcpsfvxzhqignwzyfrrquqdknghsiwfghcmnydwkmasgvjqshruwrwljyqrqtwuxjloipbbyuxrrneixbtfydovcsgssiseditfdsirexibxzhuelzhnjttmxjfvsfrjdswvgqqwhkaxufksvyocvchpwkwdvnxsuqxtxfjcwosbsioyptggxbzukgaxmuwqbodlierfjyvsrelvmqidp
                start:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2022-05-27T14:21:59'
                end:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2022-05-27T14:21:59'
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ymxkfqetqrnbqnjfhrllfwtmsncewpwguslutvgvrdlua
                calendar_id:
                  type: string
                  description: ''
                  example: aut
              required:
                - title
                - description
                - start
                - end
                - location
                - calendar_id
  '/api/events/{id}':
    get:
      summary: showEvent
      description: 'Display the specified resource.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Evènements
    put:
      summary: updateEvent
      description: 'Update the specified resource in storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Evènements
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nyhqxl
                description:
                  type: string
                  description: 'Must not be greater than 1000 characters.'
                  example: burzjporalnqlpxjafsnpeaberqfeuhkhjrscxdhyyzseqtrqhhvbxlhzahsxldwjrdkpovjyievcqlzncmajhrgvxtaiailuornklxhkxtmcyftubrnsqmthtfturxiaqbtdhbyihqpwdnopjkgmnztlncsitxrkyctyuajlbdmtjtoukbenprlbhagjuaoyqjzjskebmqisfbtaaozurauljsusdkqxzuowkpyavlwtnsoxbilwunmwcjblhjyjohbheymjqjmnvyhhvpfylhzgyrkigcdgxefksxjijzvsdedjtebkhmntwvyiozywyxdvigcofzizhvpjfcdkciawuiejfuluslweonxtvwptfafytdatwvgkleifgatvcczlgtxlsdhshpymaaoibecyosunvuakcyypjdjtbtsqqzesnvptpneeagebxppkqykibvynmfuthiolmntwmvkrgqrshlsnfdbanqbkcgmjbzyhojixhahoakrqgtewsawqzgifhvbobockieggipdptwgyjjcsjcdhuexacpcxipcfbtysbwwmjdebfromtrtdyaexbmxfoiyzvszpzfnljolwtmhqmkclepagdyfktwsxttddz
                start:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2022-05-27T14:21:59'
                end:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2022-05-27T14:21:59'
                location:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nvjgaalptegyrojehlgocorfarmrccnqftgfkqojdwdelrzrmqmrgeydkhwjutgqvjeflixqdwfeefdfgtwotmxaiecinxcldjtvscetytqaxkbfnbrswgltxzlnpyrmjhpoezdrijxwpgdtvnbuzkkxhxiqaxykcrrmkfsxjoiffsocgcjtxwnekd
    delete:
      summary: deleteEvent
      description: 'Remove the specified resource from storage.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Evènements
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: 1
        required: true
        schema:
          type: integer
  /api/update/gaps/events:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Gaps
  '/api/update/gaps/{token}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'All fetched'
                  data:
                    user: null
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'All fetched'
                  data:
                    type: object
                    example:
                      user: null
      tags:
        - Gaps
    parameters:
      -
        in: path
        name: token
        description: ''
        example: VGrxhPp9xuDb947JZADe7ESdBDkwdq
        required: true
        schema:
          type: string
  /api/update/gaps/marks:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Gaps
  /api/update/gaps:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Gaps
  /api/mails:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Mail
  '/api/mails/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated
                  data:
                    - sanctum
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated
                  data:
                    type: array
                    example:
                      - sanctum
                    items:
                      type: string
      tags:
        - Mail
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the mail.'
        example: '7915'
        required: true
        schema:
          type: string
  /api/mails/send:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Mail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jalyn91@example.org
                subject:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eatbkdjuluioglrjrpqhdmiplaplbggojawipsnxbweqdgeongpeatvaxewksboytwwkjgfsifdgepzanrzktnltiwyswkhqzrbgaifqgidoagcbhnqzlhcblrgfnulycrufbtifcatfhafysjpjfjukktszzcmngcpxwswppdgvorzkiaqrfkottlhyfjvpm
                message:
                  type: string
                  description: ''
                  example: qui
              required:
                - to
                - subject
                - message
  /api/menu:
    get:
      summary: getCafMenus
      description: 'Retourne un json contenant une liste des menus.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "[\n {\n  \"2022-05-25\": [\n    {\n      \"id\": 1,\n      \"entry\": \"Crème de légumes\",\n      \"plate\": \"Quiche aux tomates et basilic\",\n      \"dessert\": \"Salade de fruits\",\n      \"date\": \"2022-05-25 23:32:08\",\n      \"menu\": {\n        \"id\": 1529386802506784773,\n        \"date\": \"2022-05-25 23:32:08\"\n      }\n    },\n    {\n      \"id\": 2,\n      \"entry\": \"Crème de légumes\",\n      \"plate\": \"Ailerons de poulet (CH) grillés, Sauce barbecue, Frites, Sauté de légumes de saison\",\n      \"dessert\": \"Salade de fruits\",\n      \"date\": \"2022-05-25 23:32:08\",\n      \"menu\": {\n        \"id\": 1529386800858468355,\n        \"date\": \"2022-05-25 23:32:08\"\n      }\n    }\n  ],\n}"
      tags:
        - 'Menu de la caf'
  /api/marks:
    get:
      summary: getMarks
      description: 'Retourne un json contenant une liste des notes de l''utilisateur.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"2020 - 2021\": [\n  {\n    \"id\": 1,\n    \"module_code\": \"MODULE\",\n    \"module_name\": \"TEXT\",\n    \"value\": X,\n    \"year_start\": X,\n    \"year_end\": X\n  },\n}"
      tags:
        - Notes
tags:
  -
    name: Authentication
    description: "\nAPIs pour gérer les authentifications"
  -
    name: Autres
    description: ''
  -
    name: Calendrier
    description: "\nAPIs pour gérer les calendrier"
  -
    name: Evènements
    description: "\nAPIs pour gérer les évènements"
  -
    name: Gaps
    description: "\nAPIs pour forcer la mis à jour de toutes les données de Gaps"
  -
    name: Mail
    description: "\nAPIs pour gérer les mails"
  -
    name: 'Menu de la caf'
    description: "\nAPIs pour gérer les menus"
  -
    name: Notes
    description: "\nAPIs pour gérer les notes"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
