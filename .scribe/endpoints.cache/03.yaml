## Autogenerated by Scribe. DO NOT MODIFY.

name: Calendrier
description: |-

  APIs pour gérer les calendrier
endpoints:
  -
    httpMethods:
      - GET
    uri: api/calendars
    metadata:
      title: getCalendars
      description: "Retourne un json contenant une liste des calendrier. La liste correspond à l'ensemble des évènements de tous les calendriers que suit l'utilisateur."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           "id" => 1,
           "name" => "Calendrier 1",
           "events" => [
               "id" => 1,
               "title" => "Event 1",
               "start" => "2020-01-01",
               "end" => "2020-01-01",
               "description" => "Description 1",
               "location" => "Location 1",
               "calendar_id" => 1,
               "created_at" => "2020-01-01",
               "updated_at" => "2020-01-01",
            ]
          ]
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/calendars
    metadata:
      title: 'Store calendar'
      description: 'Crée un calendrier.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mmazanyfrdngkfbeutwgnnskilndmmlxgopwenmuelunitdmmsocghmevzjxvzmbqxpjfmd
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Show calendar'
      description: 'Retourne un json contenant un calendrier.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated","data":["sanctum"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Update calendar'
      description: 'Update the specified resource in storage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ltxdybvbggpjsoadhhmdwwvrs
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Delete calendar'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/calendars/share
    metadata:
      title: 'Share calendar'
      description: 'Partage un calendrier avec un autre utilisateur.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      calendar_id:
        name: calendar_id
        description: 'ID du calendrier à partager.'
        required: true
        example: 4
        type: integer
        custom: []
      user_id:
        name: user_id
        description: "ID de l'utilisateur à qui partager le calendrier."
        required: true
        example: 4
        type: integer
        custom: []
      can_own:
        name: can_own
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      can_view:
        name: can_view
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    responses: []
    responseFields: []
