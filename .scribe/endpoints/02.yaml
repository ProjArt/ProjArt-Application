name: Calendrier
description: |-

  APIs pour gérer les calendrier
endpoints:
  -
    httpMethods:
      - GET
    uri: api/calendars
    metadata:
      title: 'Get calendars'
      description: "Retourne un json contenant une liste des calendrier. La liste correspond à l'ensemble des évènements de tous les calendriers que suit l'utilisateur."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          [
           {
             "id": 1,
             "name": "NAME"
           }
          ]
        headers: []
        description: '200, success'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/calendars
    metadata:
      title: 'Store calendar'
      description: 'Crée un calendrier.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: lrubydrmjcchazjrnywdofvmazubotouwapgseoxpxeoiuunnnjvcljagov
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Show calendar'
      description: 'Retourne un json contenant un calendrier.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <meta http-equiv="X-UA-Compatible" content="ie=edge">
              <title>Document</title>
              <link rel="stylesheet" href="//localhost:8080/css/app.css">
          </head>
          <body>
              <div id="app"></div>

              <script src="//localhost:8080/js/app.js"></script>
          </body>
          </html>
        headers:
          content-type: 'text/html; charset=UTF-8'
          cache-control: 'no-cache, private'
          set-cookie: 'XSRF-TOKEN=eyJpdiI6IkE0d1haOE1pbjNvbzVnZjhlWDBnSXc9PSIsInZhbHVlIjoiU3BSeElsYWdzM1hGczR1WCtEYko0NDhCSklvZmMyWDJXTk5wNmFBOVJSZ01ZZklWZm5hdXdkcDU1QkNRVDNVdlpMR3Z2NVg3VUoyTXFyRmovNzNmc2JDS3ZVdnF3YXZrSXg3WFRpdHZoTFBXUHozemQ1bmlHVVRUN05jQW9GdHEiLCJtYWMiOiI3NzJhMjhkMGMwOWVmZWU5NjgxMzBjYjY2MDdjMWZiZDE4Y2I1YjYwMWNmYzU2YmRjZGExODBiZjFlYWE1ZmUxIiwidGFnIjoiIn0%3D; expires=Sat, 28 May 2022 20:27:17 GMT; Max-Age=7200; path=/; samesite=lax; laravel_session=eyJpdiI6IktNN2dTYmxScXJta25IZFRQbkVkTFE9PSIsInZhbHVlIjoiV2xtbVpVZHFNSHF6cGFPaTAvYjh5WGxacStOem9SWWdLQTZDb3o3N0YvUG5GZFVYbnRDaWNmSHIwYjRTTkhkOHlOZFRLanpObm5XdkxaRUxFY1JIQmdRNEY3THo4SDZKSWI5czdiVUFOUHdzNWpmOTg3Zjl0dDBLK05nSjRpdjciLCJtYWMiOiI3ZmUyNzRjNWEwNTE1NDhjZmYzZDRhOTk0YzcwZDVmZDBiMmMzYjA3ZTUxNjUxMTRiYTVjMWJiYmZjNWM0NGRkIiwidGFnIjoiIn0%3D; expires=Sat, 28 May 2022 20:27:17 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Update calendar'
      description: 'Update the specified resource in storage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: sfhzqmofifxdabwnfgfvptmlqhqtivwavmoxiwxqfbzlmldmhqlrqdxjuehykfraryppegivmlydbochcbbragemfuixecqosxkyirqgwyqsbyyilcqqgdtndkofwpncfvjflgkkizuezdabkrsbpycrpesw
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/calendars/{id}'
    metadata:
      title: 'Delete calendar'
      description: 'Remove the specified resource from storage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      id:
        name: id
        description: 'The ID of the calendar.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/calendars/share
    metadata:
      title: 'Share calendar'
      description: 'Partage un calendrier avec un autre utilisateur.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      calendar_id:
        name: calendar_id
        description: 'ID du calendrier à partager.'
        required: true
        example: 8
        type: integer
        custom: []
      user_id:
        name: user_id
        description: "ID de l'utilisateur à qui partager le calendrier."
        required: true
        example: 15
        type: integer
        custom: []
      can_own:
        name: can_own
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      can_view:
        name: can_view
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
    responses: []
    responseFields: []
