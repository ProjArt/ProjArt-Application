name: Gaps
description: |-

  APIs pour forcer la mis à jour de toutes les données de Gaps
endpoints:
  -
    httpMethods:
      - GET
    uri: api/update/gaps/events
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated","data":["sanctum"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/update/gaps/marks
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated","data":["sanctum"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/calendars/import
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: tius
        type: string
        custom: []
      ics:
        name: ics
        description: 'Must be a file.'
        required: true
        example: null
        type: file
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/update/gaps/{token}'
    metadata:
      title: 'Update all Gaps Cron'
      description: 'Pour forcer la mise à jour des données provenant de Gaps depuis un cron'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters:
      token:
        name: token
        description: ''
        required: true
        example: VGrxhPp9xuDb947JZADe7ESdBDkwdq
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"All fetched","data":{"user":null}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/update/gaps/all
    metadata:
      title: 'Update all Gaps'
      description: 'Pour forcer la mise à jour des données provenant de Gaps'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {{token}}'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"success":false,"message":"Unauthenticated","data":["sanctum"]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
